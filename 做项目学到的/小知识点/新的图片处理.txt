

自己工程里面的图片处理已经过时了，确定：只能拿到图库里面的图片，并不能拿到其他地方的图片

1.Android 4.4从图库选择图片,获取图片路径并裁剪   http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2014/1021/1816.html

  通过URI获取的文件路径为null的解决方法  http://blog.csdn.net/dj0379/article/details/50765021

  Android中使用Intent打开本地图库  http://blog.csdn.net/u013718120/article/details/46896457



2.Android 超高仿微信图片选择器 图片该这么加载   http://blog.csdn.net/lmj623565791/article/details/39943731

 android系统通过图片绝对路径获取URI的三种方法   http://www.2cto.com/kf/201307/231972.html
 MediaStore.Images.Media.getBitmap从Uri中获得bitmap以及其缺陷  http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2014/0826/1665.html

 android 多媒体数据库详解  http://blog.csdn.net/fengye810130/article/details/11522741



 
[android]什么适当替代了过时的"managedQuery"  http://www.itstrike.cn/Question/1cd242b4-4b31-442a-926a-bec4945681d6.html

用 managedQuery() 时需要注意的一个陷阱  http://blog.csdn.net/quaful/article/details/6976768


********
managedQuery过时的解决办法  http://blog.csdn.net/tiramisu_ljh/article/details/47083879
//            cursor = activity.managedQuery(contentUri, proj, null, null, null);  //过时用下面的方法替代
            cursor = activity.getContentResolver().query(contentUri, proj, null, null, null);


什么适当替代了过时的"managedQuery          (自己还是不会去怎么搜索自己的问题)
*********





工程中过时方法的取代：

http://blog.sina.com.cn/s/blog_6261f86901019u5o.html
旧方法：import android.text.ClipboardManager; -->新方法：import android.content.ClipboardManager;

Error:(286, 56) 警告: [deprecation] MediaRecorder.OutputFormat中的RAW_AMR已过时





===================
图片压缩问题：

1.android之BitmapFactory.Options的使用  http://www.tuicool.com/articles/63emAv

2.BitmapFactory.Options避免 内存溢出 OutOfMemoryError的优化方法  http://www.cnblogs.com/anee/archive/2012/10/11/2719900.html
  options.inSampleSize = 10;   //width，hight设为原来的十分一 

3. android bitmap compress（图片压缩）  http://blog.csdn.net/luhuajcdd/article/details/8948261 

4.bitmap的用法（浅谈）  http://blog.sina.com.cn/s/blog_9c51ede40100yskx.html


/**
     * 压缩图片大小
     *
     * @param image 源Bitmap
     * @return 压缩后的Bitmap
     */
    public static Bitmap compressImage(Bitmap image) {

        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        image.compress(Bitmap.CompressFormat.JPEG, 100, baos);// 质量压缩方法，这里100表示不压缩，把压缩后的数据存放到baos中
        int options = 100;
        while (baos.toByteArray().length / 1024 > 100) { // 循环判断如果压缩后图片是否大于100kb,大于继续压缩
            baos.reset();// 重置baos即清空baos
            image.compress(Bitmap.CompressFormat.JPEG, options, baos);// 这里压缩options%，把压缩后的数据存放到baos中
            options -= 10;// 每次都减少10
        }
        ByteArrayInputStream isBm = new ByteArrayInputStream(baos.toByteArray());// 把压缩后的数据baos存放到ByteArrayInputStream中
        Bitmap bitmap = BitmapFactory.decodeStream(isBm, null, null);// 把ByteArrayInputStream数据生成图片
        return bitmap;
    }

5.Android Bitmap压缩图像的正确方法(compress的误区)  http://blog.csdn.net/adam_ling/article/details/52346741



























